<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.atomicleopard</groupId>
	<artifactId>webelemental</artifactId>
	<name>webelemental</name>
	<packaging>jar</packaging>
	<version>0.0.1</version>
	<description>
		WebElemental is a small library to make writing Selenium tests easier. The existing WebElement interface is a bit
		clunky and hard to use. WebElemental introduces the Element class, which works with an API modeled on jQuery.
		This means that web tests can be written in a way that is familiar to those used to CSS selectors and jQuery.
 	</description>
	<url>http://www.atomicleopard.com</url>
	<organization>
		<name>Atomic Leopard</name>
		<url>http://www.atomicleopard.com</url>
	</organization>
	<developers>
		<developer>
			<id>nick</id>
			<name>Nicholas Okunew</name>
			<email>nick@atomicleopard.com</email>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>GNU Lesser General Public License (LGPL), Version 3.0</name>
			<url>http://www.gnu.org/licenses/lgpl-3.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:atomicleopard/WebElement.git</connection>
		<developerConnection>scm:git:git@github.com:atomicleopard/WebElement.git</developerConnection>
		<url>git@github.com:atomicleopard/WebElement.git</url>
	</scm>
	
	<!-- We use Sonatype to sync to the central repository, they require us to set their pom as our parent pom. -->
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>
		<!-- Expressive is another library from Atomic Leopard that allows us to write collection and transformation code succinctly and expressively -->
		<dependency>
			<groupId>com.atomicleopard</groupId>
			<artifactId>expressive</artifactId>
			<version>0.9.2</version>
			<scope>compile</scope>
		</dependency>
		<!-- This library is built against 2.6.0 of selenium, but you can provide any version you want. -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>2.6.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>